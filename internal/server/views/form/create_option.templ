package form

import "fmt"

templ Create_Options_Modal(product_id int32, errors []FieldError) {
	<!-- Create Form Modal -->
	<dialog open id="modal" class="modal modal-bottom sm:modal-middle">
		<div class="modal-box">
			<h3 class="text-lg font-bold">Create New Options</h3>
			<div class="py-4">
				<form id="create_options_form" hx-post={ fmt.Sprintf("/products/%d/options", product_id) } hx-target="#create_options_form" hx-swap="outerHTML" class="space-y-4">
					<div class="space-y-2">
						<label class="option_key">
							<span class="text-sm font-medium text-gray-700 mb-1 block">Option</span>
							<input
								type="text"
								id="option_key"
								name="option_key"
								required
								minlength="1"
								maxlength="50"
								placeholder="Enter option key (1-50 characters)"
							/>
						</label>
					</div>
				</form>
			</div>
			<div class="modal-action">
				<form method="dialog">
					<button class="btn">Cancel</button>
				</form>
				<button
					type="submit"
					form="create_options_form"
					class="btn btn-primary"
				>
					Create Item
				</button>
			</div>
		</div>
	</dialog>
}

templ CreateOptionsForm(errors []FieldError, formData map[string]interface{}) {
	<form id="createProductForm" class="space-y-4">
		<div class="space-y-2">
			<label class="block">
				<span class="text-sm font-medium text-gray-700 mb-1 block">Name</span>
				<input
					type="text"
					id="name"
					name="name"
					required
					maxlength="255"
					value={ getString(formData, "name") }
					class={ "input input-bordered w-full", templ.KV("input-error", hasFieldError(errors, "name")) }
					placeholder="Enter item name"
				/>
				if nameError := getFieldError(errors, "name"); nameError != nil {
					<div class="text-error text-sm mt-1">{ nameError.Message }</div>
				}
			</label>
		</div>
		<div class="space-y-2">
			<label class="block">
				<span class="text-sm font-medium text-gray-700 mb-1 block">Description</span>
				<textarea
					id="description"
					name="description"
					maxlength="1000"
					rows="3"
					class={ "textarea textarea-bordered w-full", templ.KV("textarea-error", hasFieldError(errors, "description")) }
					placeholder="Enter item description (optional)"
				>{ getString(formData, "description") }</textarea>
				if descError := getFieldError(errors, "description"); descError != nil {
					<div class="text-error text-sm mt-1">{ descError.Message }</div>
				}
			</label>
		</div>
		<div class="form-control">
			<label class="label cursor-pointer justify-start gap-3">
				<input
					type="checkbox"
					id="active"
					name="active"
					class={ "checkbox", templ.KV("checkbox-error", hasFieldError(errors, "active")) }
					if getBool(formData, "active") {
						checked
					}
				/>
				<span class="label-text">Active</span>
			</label>
			if activeError := getFieldError(errors, "active"); activeError != nil {
				<div class="text-error text-sm mt-1">{ activeError.Message }</div>
			}
		</div>
	</form>
}
