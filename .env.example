# Coffee E-commerce API Environment Variables
# Copy this file to .env and adjust values as needed

# =============================================================================
# Application Configuration
# =============================================================================

# Server port (default: 8080)
PORT=8080

# Environment: development, staging, production
ENV=development

# Set to true to enable auto-migrations on startup (development only)
AUTO_MIGRATE=true

# Set to true to clear existing data when seeding (BE CAREFUL!)
CLEAR_DATA=false

# =============================================================================
# Database Configuration
# =============================================================================

# PostgreSQL connection string
# The config.go will auto-generate this if not provided:
# - Local: postgres://postgres:password@localhost:5432/coffee_ecommerce?sslmode=disable
# - Docker: postgres://postgres:password@postgres:5432/coffee_ecommerce?sslmode=disable
# DATABASE_URL=postgres://postgres:password@localhost:5432/coffee_ecommerce?sslmode=disable


# =============================================================================
# Goose Migration Configuration
# =============================================================================

# GOOSE_DRIVER=postgres
# GOOSE_DBSTRING=postgres://admin:admin@localhost:5432/admin_db
# GOOSE_MIGRATION_DIR=./migrations
# GOOSE_TABLE=custom.goose_migrations

# =============================================================================
# Cache Configuration (Valkey/Redis)
# =============================================================================

# Valkey/Redis address
# The config.go will auto-detect:
# - Local: localhost:6379
# - Docker: valkey:6379
# VALKEY_ADDR=localhost:6379

# Valkey/Redis password (if authentication is enabled)
# VALKEY_PASSWORD=your_valkey_password

# =============================================================================
# Message Queue Configuration (NATS)
# =============================================================================

# NATS server URL
# The config.go will auto-detect:
# - Local: nats://localhost:4222
# - Docker: nats://nats:4222
# NATS_URL=nats://localhost:4222

# NATS authentication token (if auth is enabled)
# NATS_TOKEN=your_nats_token

# =============================================================================
# File Storage Configuration (MinIO/S3)
# =============================================================================

# MinIO endpoint
# The config.go will auto-detect:
# - Local: localhost:9000
# - Docker: minio:9000
# MINIO_ENDPOINT=localhost:9000

# MinIO credentials
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin123

# Use SSL for MinIO connections (true/false)
MINIO_USE_SSL=false

# MinIO bucket names (optional, can be set in application)
# MINIO_BUCKET_PRODUCTS=ecommerce-products
# MINIO_BUCKET_INVOICES=ecommerce-invoices
# MINIO_BUCKET_ASSETS=ecommerce-assets
# MINIO_BUCKET_UPLOADS=ecommerce-uploads

# =============================================================================
# Payment Configuration (Future)
# =============================================================================

# Stripe configuration (add when payment integration is implemented)
# STRIPE_SECRET_KEY=sk_test_...
# STRIPE_WEBHOOK_SECRET=whsec_...
# STRIPE_PUBLISHABLE_KEY=pk_test_...

# =============================================================================
# Email Configuration (Future)
# =============================================================================

# Email service configuration (add when email integration is implemented)
# EMAIL_SERVICE=sendgrid
# SENDGRID_API_KEY=your_sendgrid_api_key
# FROM_EMAIL=noreply@yourcoffee.com
# FROM_NAME=Your Coffee Company

# =============================================================================
# Monitoring & Observability (Future)
# =============================================================================

# Prometheus metrics endpoint (enabled by default at /metrics)
# METRICS_ENABLED=true

# Log level: debug, info, warn, error
# LOG_LEVEL=info

# Sentry DSN for error tracking (optional)
# SENTRY_DSN=https://your-sentry-dsn@sentry.io/project-id

# =============================================================================
# Security Configuration (Future)
# =============================================================================

# JWT secret for authentication (generate a strong secret in production)
# JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT token expiration times
# JWT_ACCESS_TOKEN_EXPIRES=15m
# JWT_REFRESH_TOKEN_EXPIRES=7d

# CORS allowed origins (comma-separated)
# CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173

# =============================================================================
# Development Helpers
# =============================================================================

# Force Docker detection (useful for development)
# DOCKER_CONTAINER=true

# Database migration direction: up, down, status
# MIGRATION_DIRECTION=up

# Enable query logging in development
# DB_LOG_QUERIES=true

# =============================================================================
# Production Overrides
# =============================================================================

# In production, you would typically override these:
# ENV=production
# DATABASE_URL=postgres://user:password@your-db-host:5432/coffee_ecommerce?sslmode=require
# VALKEY_ADDR=your-redis-host:6379
# VALKEY_PASSWORD=your-secure-redis-password
# NATS_URL=nats://your-nats-cluster:4222
# NATS_TOKEN=your-secure-nats-token
# MINIO_ENDPOINT=s3.amazonaws.com
# MINIO_ACCESS_KEY=your-aws-access-key
# MINIO_SECRET_KEY=your-aws-secret-key
# MINIO_USE_SSL=true
# PORT=8080
# AUTO_MIGRATE=false